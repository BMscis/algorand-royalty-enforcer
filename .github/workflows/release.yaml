name: Release

on:
  release:
    types:
      - published

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

      - name: Configure Poetry
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Configure git
        run: |
          git config --global user.name "GitHub bot"
          git config --global user.email "bot@deptagency.com"

      - name: Bump version
        run: |
          poetry version ${{ github.event.release.tag_name }}
          git commit -m 'Bump version in pyproject.toml'

      # Disable tests for now, requires Algod+KMD to be available
      # - name: Run tests
      #   run: poetry run pytest

      - name: Compile contracts
        run: ./build.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            assets/enforcer_abi.json
            assets/enforcer_approval.teal
            assets/enforcer_clear.teal
            assets/enforcer_placeholder_approval.teal
            assets/enforcer_placeholder_clear.teal

      - name: Push updates to repo
        run: git push
        env:
          # The secret is passed automatically. Nothing to configure.
          github-token: ${{ secrets.GITHUB_TOKEN }}
